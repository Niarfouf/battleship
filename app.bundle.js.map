{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://template-setup/webpack/bootstrap","webpack://template-setup/webpack/runtime/global","webpack://template-setup/webpack/runtime/publicPath","webpack://template-setup/./src/dom/displayPlayerGrid.js","webpack://template-setup/./src/dom/displayEndScreen.js","webpack://template-setup/./src/dom/restartGame.js","webpack://template-setup/./src/dom/updateCell.js","webpack://template-setup/./src/dom/createShips.js","webpack://template-setup/./src/dom/displayPlayerFleet.js","webpack://template-setup/./src/dom/displayComputerGrid.js","webpack://template-setup/./src/class/Player.js","webpack://template-setup/./src/class/Ship.js","webpack://template-setup/./src/class/GameBoard.js","webpack://template-setup/./src/class/Game.js","webpack://template-setup/./src/dom/audioManager.js","webpack://template-setup/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import displayPlayerFleet from './displayPlayerFleet'\n\nexport default function displayPlayerGrid(game) {\n    const main = document.querySelector('#main')\n\n    let playerDiv = document.querySelector('.player-container')\n\n    if (!playerDiv) {\n        playerDiv = document.createElement('div')\n        playerDiv.classList.add('player-container')\n    }\n    playerDiv.textContent = ''\n    const playerName = document.createElement('h1')\n    playerName.innerText = game.player.getName()\n    playerDiv.appendChild(playerName)\n\n    const playerGrid = document.createElement('div')\n    playerGrid.classList.add('player-grid')\n\n    game.playerBoard.board.forEach((row, y) => {\n        row.forEach((cell, x) => {\n            const square = document.createElement('div')\n\n            square.classList.add('player-cell')\n            square.setAttribute('data-x', `${x}`)\n            square.setAttribute('data-y', `${y}`)\n\n            square.addEventListener('dragover', (e) => {\n                e.preventDefault()\n            })\n            square.addEventListener('dragenter', (e) => {\n                e.preventDefault()\n            })\n            square.addEventListener('dragleave', (e) => {\n                e.preventDefault()\n            })\n            square.addEventListener('drop', (e) => {\n                e.preventDefault()\n                dropEvent(e, square, game)\n            })\n\n            playerGrid.appendChild(square)\n        })\n    })\n    playerDiv.appendChild(playerGrid)\n\n    const resetFleet = document.createElement('div')\n    resetFleet.textContent = 'Reset'\n    resetFleet.classList.add('reset')\n    resetFleet.addEventListener('click', () => {\n        game.restartGame()\n        displayPlayerFleet(game, 'reset')\n        displayPlayerGrid(game)\n    })\n    playerDiv.appendChild(resetFleet)\n    main.appendChild(playerDiv)\n}\n\nfunction dropEvent(e, square, game) {\n    const dataY = e.dataTransfer.getData('y')\n    const dataX = e.dataTransfer.getData('x')\n    const length = e.dataTransfer.getData('length')\n    const name = e.dataTransfer.getData('name')\n    const next = e.dataTransfer.getData('next')\n    const indexX = square.dataset.x\n    const indexY = square.dataset.y\n    const coordinates = []\n    for (let i = 0; i < length; i += 1) {\n        if (dataY !== 'undefined') {\n            const newIndexY = indexY - dataY + i\n            coordinates.push([indexX * 1, newIndexY])\n        } else {\n            const newIndexX = indexX - dataX + i\n            coordinates.push([newIndexX, indexY * 1])\n        }\n    }\n    if (game.playerBoard.addMoveShip(name, length, coordinates) === true) {\n        const cellToUpdate = document.querySelector(\n            `.player-cell[data-x=\"${coordinates[0][0]}\"][\n                            data-y=\"${coordinates[0][1]}\"\n                        ]`\n        )\n\n        document.querySelector(`#${name}`).style.position = 'absolute'\n        cellToUpdate.appendChild(document.querySelector(`#${name}`))\n        displayPlayerFleet(game, next)\n    }\n}\n","import restartGame from './restartGame'\n\nexport default function displayEndScreen(player, game) {\n    const main = document.querySelector('#main')\n    main.textContent = ''\n    const endTitle = document.createElement('h1')\n    endTitle.classList.add('end')\n    if (player.name !== 'Computer') {\n        endTitle.textContent = 'You win !'\n    } else {\n        endTitle.textContent = 'You lose !'\n    }\n\n    const resetFleet = document.createElement('div')\n    resetFleet.textContent = 'Play again'\n    resetFleet.classList.add('restart')\n    resetFleet.addEventListener('click', () => {\n        restartGame(game)\n    })\n    endTitle.appendChild(resetFleet)\n    main.appendChild(endTitle)\n}\n","import displayPlayerFleet from './displayPlayerFleet'\nimport displayPlayerGrid from './displayPlayerGrid'\n\nexport default function restartGame(game) {\n    game.restartGame()\n    game.computer.hitShotMemory = []\n\n    displayPlayerFleet(game, 'reset')\n    displayPlayerGrid(game)\n}\n","import water from '../media/water.mp3'\nimport explosion from '../media/explosion.mp3'\nimport gunshot from '../media/gunshot.mp3'\n\nconst explosionEffect = new Audio(explosion)\nconst gunshotEffect = new Audio(gunshot)\nconst waterEffect = new Audio(water)\nexport default function updateCell(hitInfo, victim) {\n    const cellToUpdate = document.querySelector(\n        `.${victim}-cell[data-x=\"${hitInfo.coordinate[0]}\"][\n            data-y=\"${hitInfo.coordinate[1]}\"\n        ]`\n    )\n    const text = document.querySelector(`.${victim}-container .text-info`)\n    text.textContent = `The last incoming shot ${hitInfo.true} !`\n    const shot = document.createElement('div')\n    shot.classList.add('shot')\n    gunshotEffect.play()\n    if (hitInfo.true === 'touched' || hitInfo.true === 'sunk') {\n        setTimeout(() => {\n            shot.classList.add('red')\n            explosionEffect.play()\n        }, 2000)\n    }\n    if (hitInfo.true === 'missed') {\n        setTimeout(() => {\n            shot.classList.add('yellow')\n            waterEffect.play()\n        }, 2000)\n    }\n    cellToUpdate.appendChild(shot)\n}\n","export default function createShips(length, direction, name) {\n    const draggableDiv = document.querySelector(`#${name}`)\n    draggableDiv.textContent = ''\n    for (let i = 0; i < length; i += 1) {\n        const square = document.createElement('div')\n        if (direction === 'row') {\n            square.dataset.x = i\n        } else {\n            square.dataset.y = i\n        }\n        square.addEventListener('mousedown', (e) => {\n            if (e.target.dataset.x) {\n                draggableDiv.dataset.x = e.target.dataset.x\n                draggableDiv.dataset.y = undefined\n            } else {\n                draggableDiv.dataset.y = e.target.dataset.y\n                draggableDiv.dataset.x = undefined\n            }\n        })\n        square.classList.add('ship-square')\n\n        draggableDiv.appendChild(square)\n    }\n}\n","import displayComputerGrid from './displayComputerGrid'\nimport createShips from './createShips'\nimport rotate from '../media/rotate.png'\n\nconst fleet = {\n    destroyer: { length: 2, nextShip: 'submarine' },\n    submarine: { length: 3, nextShip: 'cruiser' },\n    cruiser: { length: 3, nextShip: 'battleship' },\n    battleship: { length: 4, nextShip: 'carrier' },\n    carrier: { length: 5, nextShip: null },\n}\nexport default function displayPlayerFleet(game, shipName = 'destroyer') {\n    const main = document.querySelector('#main')\n    let fleetDiv = document.querySelector('.fleet')\n    if (shipName === 'reset') {\n        Object.keys(fleet).forEach((key) => {\n            delete fleet[key].done\n        })\n        shipName = 'destroyer'\n    }\n    // create fleet div for the first time\n\n    if (!fleetDiv) {\n        fleetDiv = document.createElement('div')\n        fleetDiv.classList.add('fleet')\n        main.textContent = ''\n        main.appendChild(fleetDiv)\n    }\n\n    // when fleet is empty, add start game button\n\n    if (shipName === 'null') {\n        fleetDiv.textContent = ''\n        const text = document.createElement('div')\n        text.textContent = `Press the button to confirm fleet position and start game.`\n        fleetDiv.append(text)\n\n        const button = document.createElement('button')\n        button.classList.add('start-game')\n        button.textContent = 'Ready'\n\n        button.addEventListener('click', () => {\n            fleetDiv.remove()\n            displayComputerGrid(game)\n            game.startGame()\n            document.querySelector('.reset').remove()\n            const dragElements = document.querySelectorAll('.drag')\n            dragElements.forEach((ele) => {\n                ele.draggable = false\n            })\n            const playerContainer = document.querySelector('.player-container')\n            const textInfo = document.createElement('div')\n            textInfo.classList.add('text-info')\n            textInfo.textContent = `Please Admiral ${game.player.name}, fire at the enemy!`\n            playerContainer.append(textInfo)\n        })\n\n        fleetDiv.append(button)\n\n        // update fleet div with new ships until all ships are placed\n    } else if (!fleet[shipName].done) {\n        fleetDiv.textContent = ''\n        // info text for each ship\n        const text = document.createElement('div')\n        text.textContent = `Please Admiral ${game.player.name}, put your ${shipName} on the board.`\n        fleetDiv.append(text)\n\n        // draggable ship div\n        const draggableDiv = document.createElement('div')\n        const containerDrag = document.createElement('div')\n        draggableDiv.draggable = true\n        draggableDiv.classList.add('drag')\n        draggableDiv.classList.add('row-drag')\n        draggableDiv.id = shipName\n\n        draggableDiv.dataset.length = fleet[shipName].length\n        draggableDiv.dataset.next = fleet[shipName].nextShip\n        draggableDiv.dataset.name = shipName\n        containerDrag.append(draggableDiv)\n        containerDrag.classList.add('container-drag')\n        fleetDiv.append(containerDrag)\n        createShips(fleet[shipName].length, 'row', shipName)\n        // rotate button\n        const rotateDiv = document.createElement('div')\n        const button = new Image()\n        button.src = rotate\n        button.classList.add('rotate')\n        rotateDiv.appendChild(button)\n        fleetDiv.append(rotateDiv)\n        // add event listener\n        button.addEventListener('click', () => {\n            rotateShip(draggableDiv, shipName)\n        })\n\n        draggableDiv.addEventListener('dragstart', (e) => {\n            dragStart(draggableDiv, e)\n        })\n\n        draggableDiv.addEventListener('dragend', () => {\n            dragEnd(draggableDiv)\n        })\n\n        fleet[shipName].done = true\n    }\n}\n\nfunction rotateShip(draggableDiv, shipName) {\n    if (draggableDiv.classList.contains('row-drag')) {\n        createShips(fleet[shipName].length, 'col', shipName)\n    } else {\n        createShips(fleet[shipName].length, 'row', shipName)\n    }\n    draggableDiv.classList.toggle('row-drag')\n    draggableDiv.classList.toggle('col-drag')\n}\nfunction dragStart(draggableDiv, e) {\n    draggableDiv.classList.add('is-dragged')\n\n    e.dataTransfer.setData('x', e.target.dataset.x)\n    e.dataTransfer.setData('y', e.target.dataset.y)\n    e.dataTransfer.setData('length', e.target.dataset.length)\n    e.dataTransfer.setData('name', e.target.dataset.name)\n    e.dataTransfer.setData('next', e.target.dataset.next)\n    setTimeout(() => {\n        draggableDiv.style.visibility = 'hidden'\n    }, 0)\n}\nfunction dragEnd(draggableDiv) {\n    draggableDiv.style.visibility = 'visible'\n    draggableDiv.classList.remove('is-dragged')\n    document.querySelectorAll('.player-cell.green').forEach((ele) => {\n        ele.classList.remove('green')\n    })\n    document.querySelectorAll('.red').forEach((ele) => {\n        ele.classList.remove('red')\n    })\n}\n","import displayEndScreen from './displayEndScreen'\nimport updateCell from './updateCell'\n\nexport default function displayComputerGrid(game) {\n    const main = document.querySelector('#main')\n\n    const computerDiv = document.createElement('div')\n    computerDiv.classList.add('computer-container')\n\n    const computerName = document.createElement('h1')\n    computerName.innerText = game.computer.getName()\n    computerDiv.appendChild(computerName)\n\n    const computerGrid = document.createElement('div')\n    computerGrid.classList.add('computer-grid')\n\n    game.computerBoard.board.forEach((row, y) => {\n        row.forEach((cell, x) => {\n            const square = document.createElement('div')\n            square.classList.add('computer-cell')\n\n            square.setAttribute('data-x', `${x}`)\n            square.setAttribute('data-y', `${y}`)\n            square.addEventListener('click', (e) => {\n                const responsePlayerAttack = game.playPlayerTurn([x, y])\n                if (responsePlayerAttack.true) {\n                    updateCell(responsePlayerAttack, 'computer')\n                    if (game.isGameOver()) {\n                        displayEndScreen(game.player, game)\n\n                        return\n                    }\n\n                    setTimeout(() => {\n                        updateCell(game.playComputerTurn(), 'player')\n                        if (game.isGameOver()) {\n                            displayEndScreen(game.computer, game)\n                        }\n                    }, 5000)\n                }\n            })\n            computerGrid.appendChild(square)\n        })\n    })\n    computerDiv.appendChild(computerGrid)\n    const text = document.createElement('div')\n    text.classList.add('text-info')\n    text.textContent = `Waiting for enemy attack!`\n    computerDiv.append(text)\n    main.appendChild(computerDiv)\n}\n","export default class Player {\n    static direction = {\n        left: [-1, 0],\n        right: [1, 0],\n        up: [0, -1],\n        down: [0, 1],\n    }\n\n    constructor(name) {\n        this.name = name\n\n        this.hitShotMemory = []\n        this.directionObject = { ...Player.direction }\n    }\n\n    attack(gameBoard, coordinate = this.randomCoordinate()) {\n        const shotInfo = gameBoard.receiveAttack(coordinate)\n        if (this.name === 'Computer') {\n            if (shotInfo.true === 'touched') {\n                if (coordinate[0] === 0) {\n                    delete this.directionObject.left\n                }\n                if (coordinate[0] === 9) {\n                    delete this.directionObject.right\n                }\n                if (coordinate[1] === 0) {\n                    delete this.directionObject.up\n                }\n                if (coordinate[1] === 9) {\n                    delete this.directionObject.down\n                }\n                if (this.hitShotMemory.length !== 0) {\n                    if (\n                        this.hitShotMemory[0].coordinate[1] ===\n                        shotInfo.coordinate[1]\n                    ) {\n                        delete this.directionObject.down\n                        delete this.directionObject.up\n                        if (\n                            this.hitShotMemory[this.hitShotMemory.length - 1]\n                                .coordinate[0] +\n                                1 ===\n                            shotInfo.coordinate[0]\n                        ) {\n                            delete this.directionObject.left\n                        } else {\n                            delete this.directionObject.right\n                        }\n                    } else {\n                        delete this.directionObject.left\n                        delete this.directionObject.right\n                        if (\n                            this.hitShotMemory[this.hitShotMemory.length - 1]\n                                .coordinate[1] +\n                                1 ===\n                            shotInfo.coordinate[1]\n                        ) {\n                            delete this.directionObject.up\n                        } else {\n                            delete this.directionObject.down\n                        }\n                    }\n                }\n                this.hitShotMemory.push(shotInfo)\n            }\n\n            if (\n                this.hitShotMemory.length !== 0 &&\n                (shotInfo.true === 'missed' || shotInfo.false)\n            ) {\n                if (\n                    this.hitShotMemory[this.hitShotMemory.length - 1]\n                        .coordinate[0] -\n                        1 ===\n                    shotInfo.coordinate[0]\n                ) {\n                    delete this.directionObject.left\n                }\n                if (\n                    this.hitShotMemory[this.hitShotMemory.length - 1]\n                        .coordinate[0] +\n                        1 ===\n                    shotInfo.coordinate[0]\n                ) {\n                    delete this.directionObject.right\n                }\n                if (\n                    this.hitShotMemory[this.hitShotMemory.length - 1]\n                        .coordinate[1] -\n                        1 ===\n                    shotInfo.coordinate[1]\n                ) {\n                    delete this.directionObject.up\n                }\n                if (\n                    this.hitShotMemory[this.hitShotMemory.length - 1]\n                        .coordinate[1] +\n                        1 ===\n                    shotInfo.coordinate[1]\n                ) {\n                    delete this.directionObject.down\n                }\n            }\n            if (\n                Object.keys(this.directionObject).length === 0 &&\n                this.hitShotMemory.length !== 0\n            ) {\n                this.hitShotMemory.push(this.hitShotMemory[0])\n                const coordinateX = this.hitShotMemory[0].coordinate[0]\n                const coordinateY = this.hitShotMemory[0].coordinate[1]\n                const coordinateX2 = this.hitShotMemory[1].coordinate[0]\n                const coordinateY2 = this.hitShotMemory[1].coordinate[1]\n                if (coordinateX + 1 === coordinateX2) {\n                    if (\n                        gameBoard.board[coordinateY][coordinateX - 1]\n                            .hasBeenShot === true\n                    ) {\n                        this.directionObject.up = [0, -1]\n                        this.directionObject.down = [0, 1]\n                    } else {\n                        this.directionObject.left = [-1, 0]\n                    }\n                }\n                if (coordinateX - 1 === coordinateX2) {\n                    if (\n                        gameBoard.board[coordinateY][coordinateX + 1]\n                            .hasBeenShot === true\n                    ) {\n                        this.directionObject.up = [0, -1]\n                        this.directionObject.down = [0, 1]\n                    } else {\n                        this.directionObject.right = [1, 0]\n                    }\n                }\n                if (coordinateY + 1 === coordinateY2) {\n                    if (\n                        gameBoard.board[coordinateY - 1][coordinateX]\n                            .hasBeenShot === true\n                    ) {\n                        this.directionObject.right = [1, 0]\n                        this.directionObject.left = [-1, 0]\n                    } else {\n                        this.directionObject.up = [0, -1]\n                    }\n                }\n                if (coordinateY - 1 === coordinateY2) {\n                    if (\n                        gameBoard.board[coordinateY + 1][coordinateX]\n                            .hasBeenShot === true\n                    ) {\n                        this.directionObject.right = [1, 0]\n                        this.directionObject.left = [-1, 0]\n                    } else {\n                        this.directionObject.down = [0, 1]\n                    }\n                }\n            }\n\n            if (shotInfo.true === 'sunk' || this.hitShotMemory.length > 10) {\n                this.hitShotMemory = []\n                this.directionObject = { ...Player.direction }\n            }\n        }\n\n        return shotInfo\n    }\n\n    randomCoordinate() {\n        const memoryLength = this.hitShotMemory.length\n\n        if (memoryLength !== 0) {\n            const lastHit = this.hitShotMemory[memoryLength - 1]\n\n            const randomDirection = Math.floor(\n                Math.random() * Object.keys(this.directionObject).length\n            )\n            const randomCoordinate = Object.entries(this.directionObject)[\n                randomDirection\n            ][1]\n            return [\n                lastHit.coordinate[0] + randomCoordinate[0],\n                lastHit.coordinate[1] + randomCoordinate[1],\n            ]\n        }\n        return [Math.floor(Math.random() * 10), Math.floor(Math.random() * 10)]\n    }\n\n    getName() {\n        return this.name\n    }\n}\n","export default class Ship {\n    constructor(length) {\n        this.length = length\n        this.hits = 0\n        this.sunk = false\n    }\n\n    hit() {\n        this.hits += 1\n        if (this.hits == this.length) {\n            this.sunk = true\n        }\n    }\n\n    isSunk() {\n        return this.sunk\n    }\n}\n","import Ship from './Ship'\n\nexport default class GameBoard {\n    constructor(size = 10) {\n        this.board = GameBoard.createEmptyBoard(size)\n        this.ships = {}\n    }\n\n    static createEmptyBoard(size) {\n        const board = []\n        for (let i = 0; i < size; i += 1) {\n            const row = []\n            for (let j = 0; j < size; j += 1) {\n                row.push({ ship: null, hasBeenShot: false })\n            }\n            board.push(row)\n        }\n        return board\n    }\n\n    static randomShipCoordinate(length) {\n        const randomCoordinate = [\n            Math.floor(Math.random() * 10),\n            Math.floor(Math.random() * 10),\n        ]\n        const randomDirection = Math.floor(Math.random() * 4)\n        const reference = { 0: [0, 1], 1: [1, 0], 2: [0, -1], 3: [-1, 0] }\n        const randomCoordinates = [randomCoordinate]\n        for (let i = 1; i < length; i += 1) {\n            randomCoordinates.push([\n                randomCoordinate[0] + i * reference[randomDirection][0],\n                randomCoordinate[1] + i * reference[randomDirection][1],\n            ])\n        }\n        return randomCoordinates\n    }\n\n    placeRandomFleet(\n        computerFleet = {\n            destroyer: 2,\n            submarine: 3,\n            cruiser: 3,\n            battleship: 4,\n            carrier: 5,\n        }\n    ) {\n        Object.entries(computerFleet).forEach(([name, length]) => {\n            let randomCoordinates = GameBoard.randomShipCoordinate(length)\n            while (!this.addMoveShip(name, length, randomCoordinates)) {\n                randomCoordinates = GameBoard.randomShipCoordinate(length)\n            }\n        })\n    }\n\n    placeShips() {\n        Object.keys(this.ships).forEach((key) => {\n            this.ships[key].coordinates.forEach((shipCoordinate) => {\n                const cell = this.board[shipCoordinate[1]][shipCoordinate[0]]\n                cell.ship = this.ships[key].ship\n            })\n        })\n    }\n\n    addMoveShip(name, length, coordinates) {\n        if (this.verifyCoordinate(name, coordinates)) {\n            const newShip = new Ship(length)\n            this.ships[name] = { ship: newShip, coordinates: [...coordinates] }\n            return true\n        }\n        return false\n    }\n\n    receiveAttack(coordinate) {\n        const markedCell = this.board[coordinate[1]][coordinate[0]]\n        if (markedCell.hasBeenShot === true) {\n            return { false: 'alreadyTouched', coordinate: [...coordinate] }\n        }\n        markedCell.hasBeenShot = true\n        if (markedCell.ship) {\n            markedCell.ship.hit()\n            if (markedCell.ship.isSunk()) {\n                return {\n                    true: 'sunk',\n                    coordinate: [...coordinate],\n                }\n            }\n            return {\n                true: 'touched',\n                coordinate: [...coordinate],\n            }\n        }\n        return { true: 'missed', coordinate: [...coordinate] }\n    }\n\n    allShipsSunk() {\n        return Object.keys(this.ships).reduce((response, shipName) => {\n            if (!this.ships[shipName].ship.isSunk() || response === false) {\n                return false\n            }\n            return true\n        }, true)\n    }\n\n    verifyCoordinate(shipName, coordinatesArray) {\n        if (coordinatesArray.length < 2) {\n            return false\n        }\n        let verified = true\n        coordinatesArray.forEach((coordinate) => {\n            if (\n                coordinate[0] < 0 ||\n                coordinate[1] < 0 ||\n                coordinate[0] > 9 ||\n                coordinate[1] > 9\n            ) {\n                verified = false\n            } else {\n                Object.keys(this.ships).forEach((key) => {\n                    if (key !== shipName) {\n                        this.ships[key].coordinates.forEach(\n                            (shipCoordinate) => {\n                                if (\n                                    shipCoordinate[0] === coordinate[0] &&\n                                    shipCoordinate[1] === coordinate[1]\n                                ) {\n                                    verified = false\n                                }\n                            }\n                        )\n                    }\n                })\n            }\n        })\n\n        return verified\n    }\n}\n","import Player from './Player'\nimport GameBoard from './GameBoard'\n\nexport default class Game {\n    constructor(playerName = 'Player') {\n        this.playerBoard = new GameBoard()\n        this.computerBoard = new GameBoard()\n        this.player = new Player(playerName)\n        this.computer = new Player('Computer')\n    }\n\n    startGame() {\n        this.playerBoard.placeShips()\n        this.computerBoard.placeRandomFleet()\n        this.computerBoard.placeShips()\n    }\n\n    restartGame() {\n        this.playerBoard = new GameBoard()\n        this.computerBoard = new GameBoard()\n    }\n\n    playPlayerTurn(coordinate) {\n        return this.player.attack(this.computerBoard, [...coordinate])\n    }\n\n    playComputerTurn() {\n        let responseComputerAttack = this.computer.attack(this.playerBoard)\n        while (!responseComputerAttack.true) {\n            responseComputerAttack = this.computer.attack(this.playerBoard)\n        }\n        return responseComputerAttack\n    }\n\n    isGameOver() {\n        if (this.computerBoard.allShipsSunk()) {\n            return this.player\n        }\n        if (this.playerBoard.allShipsSunk()) {\n            return this.computer\n        }\n        return false\n    }\n}\n","import audio from '../media/war-music.mp3'\nimport pause from '../media/pause.png'\nimport play from '../media/play.png'\n\nexport default function audioManager() {\n    const playPauseButton = new Image()\n    playPauseButton.src = pause\n\n    playPauseButton.classList.add('play-pause')\n\n    const myAudio = new Audio(audio)\n    myAudio.autoplay = true\n    myAudio.loop = true\n    let isPlaying = true\n    document.querySelector('#audio').append(myAudio)\n    document.querySelector('#audio').append(playPauseButton)\n    playPauseButton.addEventListener('click', () => {\n        if (isPlaying === true) {\n            myAudio.pause()\n            isPlaying = false\n            playPauseButton.src = play\n        } else {\n            myAudio.play()\n            isPlaying = true\n            playPauseButton.src = pause\n        }\n    })\n}\n","import './styles.css'\nimport audioManager from './dom/audioManager'\nimport displayPlayerFleet from './dom/displayPlayerFleet'\nimport Game from './class/Game'\nimport displayPlayerGrid from './dom/displayPlayerGrid'\nimport displayEndScreen from './dom/displayEndScreen'\n\naudioManager()\n\nconst startButton = document.querySelector('.start-game')\nstartButton.addEventListener('click', () => {\n    const playerName = document.querySelector('#player-name').value\n    const game = new Game(playerName)\n    displayPlayerFleet(game)\n    displayPlayerGrid(game)\n})\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","displayPlayerGrid","game","main","querySelector","playerDiv","createElement","classList","add","textContent","playerName","innerText","player","getName","appendChild","playerGrid","playerBoard","board","forEach","row","y","cell","x","square","setAttribute","addEventListener","preventDefault","dataY","dataTransfer","getData","dataX","name","next","indexX","dataset","indexY","coordinates","newIndexY","push","newIndexX","addMoveShip","cellToUpdate","style","position","displayPlayerFleet","dropEvent","resetFleet","restartGame","displayEndScreen","endTitle","computer","hitShotMemory","explosionEffect","Audio","gunshotEffect","waterEffect","updateCell","hitInfo","victim","coordinate","true","shot","play","setTimeout","createShips","direction","draggableDiv","target","undefined","fleet","destroyer","nextShip","submarine","cruiser","battleship","carrier","shipName","fleetDiv","Object","keys","key","done","text","append","button","remove","computerDiv","computerName","computerGrid","computerBoard","responsePlayerAttack","playPlayerTurn","isGameOver","playComputerTurn","displayComputerGrid","startGame","querySelectorAll","ele","draggable","playerContainer","textInfo","containerDrag","id","rotateDiv","Image","contains","toggle","rotateShip","setData","visibility","dragStart","dragEnd","Player","static","left","right","up","down","constructor","directionObject","attack","gameBoard","randomCoordinate","shotInfo","receiveAttack","false","coordinateX","coordinateY","coordinateX2","coordinateY2","hasBeenShot","memoryLength","lastHit","randomDirection","Math","floor","random","entries","Ship","hits","sunk","hit","isSunk","GameBoard","size","createEmptyBoard","ships","j","ship","randomShipCoordinate","reference","randomCoordinates","placeRandomFleet","computerFleet","placeShips","shipCoordinate","verifyCoordinate","newShip","markedCell","allShipsSunk","reduce","response","coordinatesArray","verified","Game","responseComputerAttack","playPauseButton","myAudio","autoplay","loop","isPlaying","pause","audioManager","value"],"sourceRoot":""}